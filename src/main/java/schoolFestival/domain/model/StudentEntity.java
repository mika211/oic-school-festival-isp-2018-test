package schoolFestival.domain.model;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * 学生 モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@Table(name="STUDENT")
public class StudentEntity implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 出席番号. */
	@Id
	private Integer studentId;

	/** 名前. */
	private String name;

	/** 当番 一覧. */
	private Set<ShiftEntity> shiftSet;

	/**
	 * コンストラクタ.
	 */
	public StudentEntity() {
		this.shiftSet = new HashSet<ShiftEntity>();
	}

	/**
	 * 出席番号 を設定します.
	 * 
	 * @param studentId
	 *            出席番号
	 */
	public void setStudentId(Integer studentId) {
		this.studentId = studentId;
	}

	/**
	 * 出席番号 を取得します.
	 * 
	 * @return 出席番号
	 */
	public Integer getStudentId() {
		return this.studentId;
	}

	/**
	 * 名前 を設定します.
	 * 
	 * @param name
	 *            名前
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * 名前 を取得します.
	 * 
	 * @return 名前
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * 当番 一覧を設定します.
	 * 
	 * @param shiftSet
	 *            当番 一覧
	 */
	public void setShiftSet(Set<ShiftEntity> shiftSet) {
		this.shiftSet = shiftSet;
	}

	/**
	 * 当番 を追加します.
	 * 
	 * @param shift
	 *            当番
	 */
	public void addShift(ShiftEntity shift) {
		this.shiftSet.add(shift);
	}

	/**
	 * 当番 一覧を取得します.
	 * 
	 * @return 当番 一覧
	 */
	public Set<ShiftEntity> getShiftSet() {
		return this.shiftSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((studentId == null) ? 0 : studentId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		StudentEntity other = (StudentEntity) obj;
		if (studentId == null) {
			if (other.studentId != null) {
				return false;
			}
		} else if (!studentId.equals(other.studentId)) {
			return false;
		}
		return true;
	}

}
